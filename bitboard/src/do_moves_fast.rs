const LINES : [[u64; 4]; 256] = [
    [0x00000000000000ff, 0x0101010101010101, 0x8040201008040201, 0x0000000000000001],
    [0x00000000000000ff, 0x0202020202020202, 0x0080402010080402, 0x0000000000000102],
    [0x00000000000000ff, 0x0404040404040404, 0x0000804020100804, 0x0000000000010204],
    [0x00000000000000ff, 0x0808080808080808, 0x0000008040201008, 0x0000000001020408],
    [0x00000000000000ff, 0x1010101010101010, 0x0000000080402010, 0x0000000102040810],
    [0x00000000000000ff, 0x2020202020202020, 0x0000000000804020, 0x0000010204081020],
    [0x00000000000000ff, 0x4040404040404040, 0x0000000000008040, 0x0001020408102040],
    [0x00000000000000ff, 0x8080808080808080, 0x0000000000000080, 0x0102040810204080],
    [0x000000000000ff00, 0x0101010101010101, 0x4020100804020100, 0x0000000000000102],
    [0x000000000000ff00, 0x0202020202020202, 0x8040201008040201, 0x0000000000010204],
    [0x000000000000ff00, 0x0404040404040404, 0x0080402010080402, 0x0000000001020408],
    [0x000000000000ff00, 0x0808080808080808, 0x0000804020100804, 0x0000000102040810],
    [0x000000000000ff00, 0x1010101010101010, 0x0000008040201008, 0x0000010204081020],
    [0x000000000000ff00, 0x2020202020202020, 0x0000000080402010, 0x0001020408102040],
    [0x000000000000ff00, 0x4040404040404040, 0x0000000000804020, 0x0102040810204080],
    [0x000000000000ff00, 0x8080808080808080, 0x0000000000008040, 0x0204081020408000],
    [0x0000000000ff0000, 0x0101010101010101, 0x2010080402010000, 0x0000000000010204],
    [0x0000000000ff0000, 0x0202020202020202, 0x4020100804020100, 0x0000000001020408],
    [0x0000000000ff0000, 0x0404040404040404, 0x8040201008040201, 0x0000000102040810],
    [0x0000000000ff0000, 0x0808080808080808, 0x0080402010080402, 0x0000010204081020],
    [0x0000000000ff0000, 0x1010101010101010, 0x0000804020100804, 0x0001020408102040],
    [0x0000000000ff0000, 0x2020202020202020, 0x0000008040201008, 0x0102040810204080],
    [0x0000000000ff0000, 0x4040404040404040, 0x0000000080402010, 0x0204081020408000],
    [0x0000000000ff0000, 0x8080808080808080, 0x0000000000804020, 0x0408102040800000],
    [0x00000000ff000000, 0x0101010101010101, 0x1008040201000000, 0x0000000001020408],
    [0x00000000ff000000, 0x0202020202020202, 0x2010080402010000, 0x0000000102040810],
    [0x00000000ff000000, 0x0404040404040404, 0x4020100804020100, 0x0000010204081020],
    [0x00000000ff000000, 0x0808080808080808, 0x8040201008040201, 0x0001020408102040],
    [0x00000000ff000000, 0x1010101010101010, 0x0080402010080402, 0x0102040810204080],
    [0x00000000ff000000, 0x2020202020202020, 0x0000804020100804, 0x0204081020408000],
    [0x00000000ff000000, 0x4040404040404040, 0x0000008040201008, 0x0408102040800000],
    [0x00000000ff000000, 0x8080808080808080, 0x0000000080402010, 0x0810204080000000],
    [0x000000ff00000000, 0x0101010101010101, 0x0804020100000000, 0x0000000102040810],
    [0x000000ff00000000, 0x0202020202020202, 0x1008040201000000, 0x0000010204081020],
    [0x000000ff00000000, 0x0404040404040404, 0x2010080402010000, 0x0001020408102040],
    [0x000000ff00000000, 0x0808080808080808, 0x4020100804020100, 0x0102040810204080],
    [0x000000ff00000000, 0x1010101010101010, 0x8040201008040201, 0x0204081020408000],
    [0x000000ff00000000, 0x2020202020202020, 0x0080402010080402, 0x0408102040800000],
    [0x000000ff00000000, 0x4040404040404040, 0x0000804020100804, 0x0810204080000000],
    [0x000000ff00000000, 0x8080808080808080, 0x0000008040201008, 0x1020408000000000],
    [0x0000ff0000000000, 0x0101010101010101, 0x0402010000000000, 0x0000010204081020],
    [0x0000ff0000000000, 0x0202020202020202, 0x0804020100000000, 0x0001020408102040],
    [0x0000ff0000000000, 0x0404040404040404, 0x1008040201000000, 0x0102040810204080],
    [0x0000ff0000000000, 0x0808080808080808, 0x2010080402010000, 0x0204081020408000],
    [0x0000ff0000000000, 0x1010101010101010, 0x4020100804020100, 0x0408102040800000],
    [0x0000ff0000000000, 0x2020202020202020, 0x8040201008040201, 0x0810204080000000],
    [0x0000ff0000000000, 0x4040404040404040, 0x0080402010080402, 0x1020408000000000],
    [0x0000ff0000000000, 0x8080808080808080, 0x0000804020100804, 0x2040800000000000],
    [0x00ff000000000000, 0x0101010101010101, 0x0201000000000000, 0x0001020408102040],
    [0x00ff000000000000, 0x0202020202020202, 0x0402010000000000, 0x0102040810204080],
    [0x00ff000000000000, 0x0404040404040404, 0x0804020100000000, 0x0204081020408000],
    [0x00ff000000000000, 0x0808080808080808, 0x1008040201000000, 0x0408102040800000],
    [0x00ff000000000000, 0x1010101010101010, 0x2010080402010000, 0x0810204080000000],
    [0x00ff000000000000, 0x2020202020202020, 0x4020100804020100, 0x1020408000000000],
    [0x00ff000000000000, 0x4040404040404040, 0x8040201008040201, 0x2040800000000000],
    [0x00ff000000000000, 0x8080808080808080, 0x0080402010080402, 0x4080000000000000],
    [0xff00000000000000, 0x0101010101010101, 0x0100000000000000, 0x0102040810204080],
    [0xff00000000000000, 0x0202020202020202, 0x0201000000000000, 0x0204081020408000],
    [0xff00000000000000, 0x0404040404040404, 0x0402010000000000, 0x0408102040800000],
    [0xff00000000000000, 0x0808080808080808, 0x0804020100000000, 0x0810204080000000],
    [0xff00000000000000, 0x1010101010101010, 0x1008040201000000, 0x1020408000000000],
    [0xff00000000000000, 0x2020202020202020, 0x2010080402010000, 0x2040800000000000],
    [0xff00000000000000, 0x4040404040404040, 0x4020100804020100, 0x4080000000000000],
    [0xff00000000000000, 0x8080808080808080, 0x8040201008040201, 0x8000000000000000],

    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],

    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],

    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
    [0x0000000000000000, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000],
];

const OUTFLANK : [[u8; 64]; 8] =[
    [
    0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x20,
    0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x40,
    0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x20,
    0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x10, 0x00, 0x04, 0x00, 0x08, 0x00, 0x04, 0x00, 0x80
    ],[
    0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x20, 0x20,
    0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x40, 0x40,
    0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x20, 0x20,
    0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x80, 0x80
    ],[
    0x00, 0x01, 0x00, 0x01, 0x10, 0x11, 0x10, 0x11, 0x00, 0x01, 0x00, 0x01, 0x20, 0x21, 0x20, 0x21,
    0x00, 0x01, 0x00, 0x01, 0x10, 0x11, 0x10, 0x11, 0x00, 0x01, 0x00, 0x01, 0x40, 0x41, 0x40, 0x41,
    0x00, 0x01, 0x00, 0x01, 0x10, 0x11, 0x10, 0x11, 0x00, 0x01, 0x00, 0x01, 0x20, 0x21, 0x20, 0x21,
    0x00, 0x01, 0x00, 0x01, 0x10, 0x11, 0x10, 0x11, 0x00, 0x01, 0x00, 0x01, 0x80, 0x81, 0x80, 0x81
    ],[
    0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x01, 0x20, 0x20, 0x22, 0x21, 0x20, 0x20, 0x22, 0x21,
    0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x01, 0x40, 0x40, 0x42, 0x41, 0x40, 0x40, 0x42, 0x41,
    0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x01, 0x20, 0x20, 0x22, 0x21, 0x20, 0x20, 0x22, 0x21,
    0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x02, 0x01, 0x80, 0x80, 0x82, 0x81, 0x80, 0x80, 0x82, 0x81
    ],[
    0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x02, 0x01,
    0x40, 0x40, 0x40, 0x40, 0x44, 0x44, 0x42, 0x41, 0x40, 0x40, 0x40, 0x40, 0x44, 0x44, 0x42, 0x41,
    0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x02, 0x01,
    0x80, 0x80, 0x80, 0x80, 0x84, 0x84, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x84, 0x84, 0x82, 0x81
    ],[
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x01,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x88, 0x88, 0x88, 0x88, 0x84, 0x84, 0x82, 0x81,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x88, 0x88, 0x88, 0x88, 0x84, 0x84, 0x82, 0x81
    ],[
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x01
    ],[
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x02, 0x01]
];

const FLIP : [[u8;256]; 8] = [
    [
    0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x1f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x3f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x1f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x7f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x1f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x3f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x1f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
    0x0f, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00
    ],[
    0x00, 0x02, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x1e, 0x1e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x3e, 0x3e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x1e, 0x1e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x7e, 0x7e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x1e, 0x1e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x3e, 0x3e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x1e, 0x1e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00,
    0x0e, 0x0e, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00
    ],[
    0x00, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x1c, 0x1e, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x3c, 0x3e, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x1c, 0x1e, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x7c, 0x7e, 0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x1c, 0x1e, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x3c, 0x3e, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x1c, 0x1e, 0x1c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x0e, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00
    ],[
    0x00, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x7e, 0x7c, 0x7c, 0x78, 0x78, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x0e, 0x0c, 0x0c, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ],[
    0x00, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x70, 0x7e, 0x7c, 0x7c, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x1e, 0x1c, 0x1c, 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ],[
    0x00, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x60, 0x7e, 0x7c, 0x7c, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70,
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x3e, 0x3c, 0x3c, 0x38, 0x38, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ],[
    0x00, 0x7e, 0x7c, 0x7c, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70,
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x7e, 0x7c, 0x7c, 0x78, 0x78, 0x78, 0x78, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70,
    0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ],[
    0x00, 0xfe, 0xfc, 0xfc, 0xf8, 0xf8, 0xf8, 0xf8, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0,
    0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0,
    0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,
    0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ]
];

#[inline]
pub fn fast_min(mut a : u32, b : u32) -> u32 {
    unsafe {
        asm!("CMP $0, $2 \n CMOVB $2, $0" : "=r"(a) : "0"(a), "r"(b));
    }
    a
}

///x -> the offset of the move 
///p -> the player's stones
///o -> the opponent's stones
#[cfg(target_arch = "x86_64")] 
pub fn fast_do_move(m : u8, x : u8, y : u8, p : u64, o : u64) -> u64 {
    #![allow(unused_assignments)]

    use std::cmp;
    let mut ph : u64 = 0;
    let mut pv : u64 = 0;
    let mut pd : u64 = 0;
    let mut pa : u64 = 0;

    let mut oh : u64 = 0;
    let mut ov : u64 = 0;
    let mut od : u64 = 0;
    let mut oa : u64 = 0;

    // let mut ofh = 0;
    // let mut ofv = 0;
    // let mut ofd = 0;
    // let mut ofa = 0;

    let mut fh = 0;
    let mut fv = 0;
    let mut fd = 0;
    let mut fa = 0;

    let mut mh : u64 = 0;
    let mut mv : u64 = 0;
    let mut md : u64 = 0;
    let mut ma : u64 = 0;

    let masks = LINES[m as usize];
    const NOT_EDGES_H : u64 = !0x8181818181818181;
    const NOT_EDGES_V : u64 = !0xFF000000000000FF;
    const NOT_EDGES_D : u64 = !0xFF818181818181FF;

    unsafe {
        asm!("PEXT $2, $1, $0" : "=r"(ph) : "r"(p) , "r"(masks[0]));
        asm!("PEXT $2, $1, $0" : "=r"(pv) : "r"(p) , "r"(masks[1]));
        asm!("PEXT $2, $1, $0" : "=r"(pd) : "r"(p) , "r"(masks[2]));
        asm!("PEXT $2, $1, $0" : "=r"(pa) : "r"(p) , "r"(masks[3]));

        asm!("PEXT $2, $1, $0" : "=r"(oh) : "r"(o) , "r"(masks[0] & NOT_EDGES_H));
        asm!("PEXT $2, $1, $0" : "=r"(ov) : "r"(o) , "r"(masks[1] & NOT_EDGES_V));
        asm!("PEXT $2, $1, $0" : "=r"(od) : "r"(o) , "r"(masks[2] & NOT_EDGES_D));
        asm!("PEXT $2, $1, $0" : "=r"(oa) : "r"(o) , "r"(masks[3] & NOT_EDGES_D));
    }

    let x1 = x as usize;
    let y1 = y as usize;
    let x2 = fast_min(x as u32,   y as u32) as usize; //(if x < y {x} else {y}) as usize;
    let y2 = fast_min(7-x as u32, y as u32) as usize; //(if 7-x < y {7-x} else {y}) as usize;

    fh |= FLIP[x1][(OUTFLANK[x1][oh as usize] & ph as u8) as usize];
    fv |= FLIP[y1][(OUTFLANK[y1][ov as usize] & pv as u8) as usize];
    fd |= FLIP[x2][(OUTFLANK[x2][od as usize] & pd as u8) as usize];
    fa |= FLIP[y2][(OUTFLANK[y2][oa as usize] & pa as u8) as usize];

    unsafe {
        asm!("PDEP $2, $1, $0" : "=r"(mh) : "r"(fh as u64) , "r"(masks[0]));
        asm!("PDEP $2, $1, $0" : "=r"(mv) : "r"(fv as u64) , "r"(masks[1]));
        asm!("PDEP $2, $1, $0" : "=r"(md) : "r"(fd as u64) , "r"(masks[2]));
        asm!("PDEP $2, $1, $0" : "=r"(ma) : "r"(fa as u64) , "r"(masks[3]));
    }

    (mh | mv | md | ma) as u64
}

/// 32 bit version of the above, for compatibility. Still only works on x86
///x -> the offset of the move 
///p -> the player's stones
///o -> the opponent's stones
#[cfg(target_arch = "x86")] 
pub fn fast_do_move(m : u8, x : u8, y : u8, p : u64, o : u64) -> u64 {
    #![allow(unused_assignments)]

    use std::cmp;
    let mut ph0 : u64 = 0;
    let mut pv0 : u64 = 0;
    let mut pd0 : u64 = 0;
    let mut pa0 : u64 = 0;

    let mut ph1 : u64 = 0;
    let mut pv1 : u64 = 0;
    let mut pd1 : u64 = 0;
    let mut pa1 : u64 = 0;

    let mut oh0 : u64 = 0;
    let mut ov0 : u64 = 0;
    let mut od0 : u64 = 0;
    let mut oa0 : u64 = 0;

    let mut oh1 : u64 = 0;
    let mut ov1 : u64 = 0;
    let mut od1 : u64 = 0;
    let mut oa1 : u64 = 0;

    // let mut ofh = 0;
    // let mut ofv = 0;
    // let mut ofd = 0;
    // let mut ofa = 0;

    let mut fh = 0;
    let mut fv = 0;
    let mut fd = 0;
    let mut fa = 0;

    let mut mh0 : u64 = 0;
    let mut mv0 : u64 = 0;
    let mut md0 : u64 = 0;
    let mut ma0 : u64 = 0;

    let mut mh1 : u64 = 0;
    let mut mv1 : u64 = 0;
    let mut md1 : u64 = 0;
    let mut ma1 : u64 = 0;

    let masks = LINES[m as usize];
    const NOT_EDGES_H : u64 = !0x8181818181818181;
    const NOT_EDGES_V : u64 = !0xFF000000000000FF;
    const NOT_EDGES_D : u64 = !0xFF818181818181FF;

    unsafe {
        asm!("PEXT $2, $1, $0" : "=r"(ph0) : "r"(p) , "r"(masks[0]));
        asm!("PEXT $2, $1, $0" : "=r"(pv0) : "r"(p) , "r"(masks[1]));
        asm!("PEXT $2, $1, $0" : "=r"(pd0) : "r"(p) , "r"(masks[2]));
        asm!("PEXT $2, $1, $0" : "=r"(pa0) : "r"(p) , "r"(masks[3]));

        asm!("PEXT $2, $1, $0" : "=r"(ph1) : "r"(p >> 32) , "r"(masks[0] >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(pv1) : "r"(p >> 32) , "r"(masks[1] >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(pd1) : "r"(p >> 32) , "r"(masks[2] >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(pa1) : "r"(p >> 32) , "r"(masks[3] >> 32));

        asm!("PEXT $2, $1, $0" : "=r"(oh0) : "r"(o) , "r"(masks[0] & NOT_EDGES_H));
        asm!("PEXT $2, $1, $0" : "=r"(ov0) : "r"(o) , "r"(masks[1] & NOT_EDGES_V));
        asm!("PEXT $2, $1, $0" : "=r"(od0) : "r"(o) , "r"(masks[2] & NOT_EDGES_D));
        asm!("PEXT $2, $1, $0" : "=r"(oa0) : "r"(o) , "r"(masks[3] & NOT_EDGES_D));

        asm!("PEXT $2, $1, $0" : "=r"(oh0) : "r"(o >> 32) , "r"((masks[0] & NOT_EDGES_H) >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(ov0) : "r"(o >> 32) , "r"((masks[1] & NOT_EDGES_V) >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(od0) : "r"(o >> 32) , "r"((masks[2] & NOT_EDGES_D) >> 32));
        asm!("PEXT $2, $1, $0" : "=r"(oa0) : "r"(o >> 32) , "r"((masks[3] & NOT_EDGES_D) >> 32));
    }

    let x1 = x as usize;
    let y1 = y as usize;
    let x2 = (if x < y {x} else {y}) as usize;
    let y2 = (if 7-x < y {7-x} else {y}) as usize;

    const SHIFTS_P : [u64; 15] = [1,2,3,4, 4,4,4,4, 3,2,1,0, 0,0,0];

    const SHIFTS_O : [u64; 15] = [0,0,1,2,3,3,3,3,2,1,0,0,0,0,0];

    let mut ph : u64 = ph0 | ph1;
    let mut pv : u64 = pv0 | (pv1 << 3);
    let mut pd : u64 = pd0 | (pd1 << SHIFTS_P[7-x1+y1]);
    let mut pa : u64 = pa0 | (pa1 << SHIFTS_P[x1+y1]);

    let mut oh : u64 = oh0 | oh1;
    let mut ov : u64 = ov0 | (ov1 << 3);
    let mut od : u64 = od0 | (od1 << SHIFTS_O[7-x1+y1]);
    let mut oa : u64 = oa0 | (oa1 << SHIFTS_O[x1+y1]);

    fh |= FLIP[x1][(OUTFLANK[x1][oh as usize] & ph as u8) as usize];
    fv |= FLIP[y1][(OUTFLANK[y1][ov as usize] & pv as u8) as usize];
    fd |= FLIP[x2][(OUTFLANK[x2][od as usize] & pd as u8) as usize];
    fa |= FLIP[y2][(OUTFLANK[y2][oa as usize] & pa as u8) as usize];

    unsafe {
        asm!("PDEP $2, $1, $0" : "=r"(mh0) : "r"(fh as u64) , "r"(masks[0]));
        asm!("PDEP $2, $1, $0" : "=r"(mv0) : "r"(fv as u64) , "r"(masks[1]));
        asm!("PDEP $2, $1, $0" : "=r"(md0) : "r"(fd as u64) , "r"(masks[2]));
        asm!("PDEP $2, $1, $0" : "=r"(ma0) : "r"(fa as u64) , "r"(masks[3]));

        asm!("PDEP $2, $1, $0" : "=r"(mh1) : "r"(fh as u64 >> 32) , "r"(masks[0] >> 32));
        asm!("PDEP $2, $1, $0" : "=r"(mv1) : "r"(fv as u64 >> 32) , "r"(masks[1] >> 32));
        asm!("PDEP $2, $1, $0" : "=r"(md1) : "r"(fd as u64 >> 32) , "r"(masks[2] >> 32));
        asm!("PDEP $2, $1, $0" : "=r"(ma1) : "r"(fa as u64 >> 32) , "r"(masks[3] >> 32));
    }

    (mh0 | mv0 | md0 | ma0  |  (mh1 << 32) | (mv1 << 32) | (md1 << 32) | (ma1 << 32)) as u64
}